// <auto-generated />
using System;
using DoctorWho.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DoctorWho.Db.Migrations
{
    [DbContext(typeof(DoctorWhoCoreDbContext))]
    [Migration("20210901080524_addCreatedAtAndMofifiedAtPropsToSchemas2")]
    partial class addCreatedAtAndMofifiedAtPropsToSchemas2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DoctorWho.Db.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorName = "Suhaib Hamdallah",
                            CreatedAt = new DateTime(2021, 9, 1, 11, 5, 24, 202, DateTimeKind.Local).AddTicks(4498),
                            ModifiedAt = new DateTime(2021, 9, 1, 11, 5, 24, 205, DateTimeKind.Local).AddTicks(5333)
                        },
                        new
                        {
                            Id = 2,
                            AuthorName = "Anas Zakarneh",
                            CreatedAt = new DateTime(2021, 9, 1, 11, 5, 24, 205, DateTimeKind.Local).AddTicks(6421),
                            ModifiedAt = new DateTime(2021, 9, 1, 11, 5, 24, 205, DateTimeKind.Local).AddTicks(6435)
                        },
                        new
                        {
                            Id = 3,
                            AuthorName = "Mohammad Abu-Qasedo",
                            CreatedAt = new DateTime(2021, 9, 1, 11, 5, 24, 205, DateTimeKind.Local).AddTicks(6456),
                            ModifiedAt = new DateTime(2021, 9, 1, 11, 5, 24, 205, DateTimeKind.Local).AddTicks(6460)
                        },
                        new
                        {
                            Id = 4,
                            AuthorName = "Stephen Hillenburg",
                            CreatedAt = new DateTime(2021, 9, 1, 11, 5, 24, 205, DateTimeKind.Local).AddTicks(6463),
                            ModifiedAt = new DateTime(2021, 9, 1, 11, 5, 24, 205, DateTimeKind.Local).AddTicks(6466)
                        },
                        new
                        {
                            Id = 5,
                            AuthorName = "Craig McCracken",
                            CreatedAt = new DateTime(2021, 9, 1, 11, 5, 24, 205, DateTimeKind.Local).AddTicks(6469),
                            ModifiedAt = new DateTime(2021, 9, 1, 11, 5, 24, 205, DateTimeKind.Local).AddTicks(6472)
                        },
                        new
                        {
                            Id = 6,
                            AuthorName = "Genndy Tartakovsky",
                            CreatedAt = new DateTime(2021, 9, 1, 11, 5, 24, 205, DateTimeKind.Local).AddTicks(6475),
                            ModifiedAt = new DateTime(2021, 9, 1, 11, 5, 24, 205, DateTimeKind.Local).AddTicks(6478)
                        },
                        new
                        {
                            Id = 7,
                            AuthorName = "Alex Hirsch",
                            CreatedAt = new DateTime(2021, 9, 1, 11, 5, 24, 205, DateTimeKind.Local).AddTicks(6481),
                            ModifiedAt = new DateTime(2021, 9, 1, 11, 5, 24, 205, DateTimeKind.Local).AddTicks(6484)
                        },
                        new
                        {
                            Id = 8,
                            AuthorName = "Butch Hartman",
                            CreatedAt = new DateTime(2021, 9, 1, 11, 5, 24, 205, DateTimeKind.Local).AddTicks(6487),
                            ModifiedAt = new DateTime(2021, 9, 1, 11, 5, 24, 205, DateTimeKind.Local).AddTicks(6490)
                        });
                });

            modelBuilder.Entity("DoctorWho.Db.Models.Companion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanionName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("WhoPlayed")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Companions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanionName = "Zaid Nour",
                            CreatedAt = new DateTime(2021, 9, 1, 11, 5, 24, 206, DateTimeKind.Local).AddTicks(7037),
                            ModifiedAt = new DateTime(2021, 9, 1, 11, 5, 24, 206, DateTimeKind.Local).AddTicks(7060)
                        },
                        new
                        {
                            Id = 2,
                            CompanionName = "Jweid Hamdallah",
                            CreatedAt = new DateTime(2021, 9, 1, 11, 5, 24, 206, DateTimeKind.Local).AddTicks(7670),
                            ModifiedAt = new DateTime(2021, 9, 1, 11, 5, 24, 206, DateTimeKind.Local).AddTicks(7682)
                        },
                        new
                        {
                            Id = 3,
                            CompanionName = "Amjad Salhab",
                            CreatedAt = new DateTime(2021, 9, 1, 11, 5, 24, 206, DateTimeKind.Local).AddTicks(7703),
                            ModifiedAt = new DateTime(2021, 9, 1, 11, 5, 24, 206, DateTimeKind.Local).AddTicks(7706)
                        },
                        new
                        {
                            Id = 4,
                            CompanionName = "Osaid Nour",
                            CreatedAt = new DateTime(2021, 9, 1, 11, 5, 24, 206, DateTimeKind.Local).AddTicks(7709),
                            ModifiedAt = new DateTime(2021, 9, 1, 11, 5, 24, 206, DateTimeKind.Local).AddTicks(7712)
                        },
                        new
                        {
                            Id = 5,
                            CompanionName = "Yazan Fouqha",
                            CreatedAt = new DateTime(2021, 9, 1, 11, 5, 24, 206, DateTimeKind.Local).AddTicks(7716),
                            ModifiedAt = new DateTime(2021, 9, 1, 11, 5, 24, 206, DateTimeKind.Local).AddTicks(7719)
                        },
                        new
                        {
                            Id = 6,
                            CompanionName = "Osaid Hamdallah",
                            CreatedAt = new DateTime(2021, 9, 1, 11, 5, 24, 206, DateTimeKind.Local).AddTicks(7722),
                            ModifiedAt = new DateTime(2021, 9, 1, 11, 5, 24, 206, DateTimeKind.Local).AddTicks(7725)
                        },
                        new
                        {
                            Id = 7,
                            CompanionName = "Hasan Khalaf",
                            CreatedAt = new DateTime(2021, 9, 1, 11, 5, 24, 206, DateTimeKind.Local).AddTicks(7728),
                            ModifiedAt = new DateTime(2021, 9, 1, 11, 5, 24, 206, DateTimeKind.Local).AddTicks(7731)
                        },
                        new
                        {
                            Id = 8,
                            CompanionName = "Rayan Hamdallah",
                            CreatedAt = new DateTime(2021, 9, 1, 11, 5, 24, 206, DateTimeKind.Local).AddTicks(7734),
                            ModifiedAt = new DateTime(2021, 9, 1, 11, 5, 24, 206, DateTimeKind.Local).AddTicks(7737)
                        });
                });

            modelBuilder.Entity("DoctorWho.Db.Models.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BithDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("DoctorName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("DoctorNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("FirstEpisodeDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastEpisodeDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Doctors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BithDate = new DateTime(1962, 7, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorName = "Dr. William A. Abdu, M.D, M.S.",
                            DoctorNumber = 1,
                            FirstEpisodeDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastEpisodeDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2021, 9, 1, 11, 5, 24, 206, DateTimeKind.Local).AddTicks(8551)
                        },
                        new
                        {
                            Id = 2,
                            BithDate = new DateTime(1962, 7, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorName = "Dr. Myles. B. Abbott, M.D.",
                            DoctorNumber = 2,
                            FirstEpisodeDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastEpisodeDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2021, 9, 1, 11, 5, 24, 206, DateTimeKind.Local).AddTicks(9758)
                        },
                        new
                        {
                            Id = 3,
                            BithDate = new DateTime(1962, 7, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorName = "Dr. Khalid Abbed, M.D.",
                            DoctorNumber = 3,
                            FirstEpisodeDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastEpisodeDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2021, 9, 1, 11, 5, 24, 206, DateTimeKind.Local).AddTicks(9807)
                        },
                        new
                        {
                            Id = 4,
                            BithDate = new DateTime(1962, 7, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorName = "Dr. Fouad. M. Abbas, M.D.",
                            DoctorNumber = 4,
                            FirstEpisodeDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastEpisodeDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2021, 9, 1, 11, 5, 24, 206, DateTimeKind.Local).AddTicks(9812)
                        },
                        new
                        {
                            Id = 5,
                            BithDate = new DateTime(1962, 7, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorName = "Dr. Naresh Trehan",
                            DoctorNumber = 5,
                            FirstEpisodeDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastEpisodeDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2021, 9, 1, 11, 5, 24, 206, DateTimeKind.Local).AddTicks(9815)
                        },
                        new
                        {
                            Id = 6,
                            BithDate = new DateTime(1962, 7, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorName = "Dr. Ahmad Assi",
                            DoctorNumber = 6,
                            FirstEpisodeDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastEpisodeDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2021, 9, 1, 11, 5, 24, 206, DateTimeKind.Local).AddTicks(9819)
                        },
                        new
                        {
                            Id = 7,
                            BithDate = new DateTime(1962, 7, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorName = "Dr. Laith Sharaqa",
                            DoctorNumber = 7,
                            FirstEpisodeDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastEpisodeDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2021, 9, 1, 11, 5, 24, 206, DateTimeKind.Local).AddTicks(9822)
                        },
                        new
                        {
                            Id = 8,
                            BithDate = new DateTime(1962, 7, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorName = "Dr. Hamza Nour",
                            DoctorNumber = 8,
                            FirstEpisodeDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastEpisodeDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2021, 9, 1, 11, 5, 24, 206, DateTimeKind.Local).AddTicks(9825)
                        });
                });

            modelBuilder.Entity("DoctorWho.Db.Models.Enemy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Description")
                        .HasMaxLength(1800)
                        .HasColumnType("nvarchar(1800)");

                    b.Property<string>("EnemyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Enemies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2021, 9, 1, 11, 5, 24, 207, DateTimeKind.Local).AddTicks(532),
                            Description = "bla bla",
                            EnemyName = "Eric Cartman",
                            ModifiedAt = new DateTime(2021, 9, 1, 11, 5, 24, 207, DateTimeKind.Local).AddTicks(544)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2021, 9, 1, 11, 5, 24, 207, DateTimeKind.Local).AddTicks(1257),
                            Description = "bla bla",
                            EnemyName = "Vicky",
                            ModifiedAt = new DateTime(2021, 9, 1, 11, 5, 24, 207, DateTimeKind.Local).AddTicks(1268)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2021, 9, 1, 11, 5, 24, 207, DateTimeKind.Local).AddTicks(1302),
                            Description = "bla bla",
                            EnemyName = "Stewie Griffin",
                            ModifiedAt = new DateTime(2021, 9, 1, 11, 5, 24, 207, DateTimeKind.Local).AddTicks(1306)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2021, 9, 1, 11, 5, 24, 207, DateTimeKind.Local).AddTicks(1309),
                            Description = "bla bla",
                            EnemyName = "Maleficent",
                            ModifiedAt = new DateTime(2021, 9, 1, 11, 5, 24, 207, DateTimeKind.Local).AddTicks(1312)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2021, 9, 1, 11, 5, 24, 207, DateTimeKind.Local).AddTicks(1316),
                            Description = "bla bla",
                            EnemyName = "Mr. Pickles ",
                            ModifiedAt = new DateTime(2021, 9, 1, 11, 5, 24, 207, DateTimeKind.Local).AddTicks(1319)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2021, 9, 1, 11, 5, 24, 207, DateTimeKind.Local).AddTicks(1322),
                            Description = "bla bla",
                            EnemyName = "Ahmad Nassar",
                            ModifiedAt = new DateTime(2021, 9, 1, 11, 5, 24, 207, DateTimeKind.Local).AddTicks(1325)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2021, 9, 1, 11, 5, 24, 207, DateTimeKind.Local).AddTicks(1328),
                            Description = "bla bla",
                            EnemyName = "Mohammad Domidi",
                            ModifiedAt = new DateTime(2021, 9, 1, 11, 5, 24, 207, DateTimeKind.Local).AddTicks(1330)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2021, 9, 1, 11, 5, 24, 207, DateTimeKind.Local).AddTicks(1334),
                            Description = "bla bla",
                            EnemyName = "Ammar Omar",
                            ModifiedAt = new DateTime(2021, 9, 1, 11, 5, 24, 207, DateTimeKind.Local).AddTicks(1336)
                        });
                });

            modelBuilder.Entity("DoctorWho.Db.Models.Episode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AuthorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<int?>("DoctorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EpisodeDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EpisodeNumber")
                        .HasColumnType("int");

                    b.Property<string>("EpisodeTitle")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EpisodeType")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasMaxLength(1800)
                        .HasColumnType("nvarchar(1800)");

                    b.Property<int>("SeriesNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("DoctorId");

                    b.ToTable("Episodes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            CreatedAt = new DateTime(2021, 9, 1, 11, 5, 24, 207, DateTimeKind.Local).AddTicks(2040),
                            DoctorId = 1,
                            EpisodeDate = new DateTime(2018, 7, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EpisodeNumber = 1,
                            EpisodeTitle = "TITLE 1",
                            EpisodeType = "TYPE 1",
                            ModifiedAt = new DateTime(2021, 9, 1, 11, 5, 24, 207, DateTimeKind.Local).AddTicks(2053),
                            SeriesNumber = 1
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 2,
                            CreatedAt = new DateTime(2021, 9, 1, 11, 5, 24, 207, DateTimeKind.Local).AddTicks(3896),
                            DoctorId = 2,
                            EpisodeDate = new DateTime(2018, 7, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EpisodeNumber = 1,
                            EpisodeTitle = "TITLE 2",
                            EpisodeType = "TYPE 2",
                            ModifiedAt = new DateTime(2021, 9, 1, 11, 5, 24, 207, DateTimeKind.Local).AddTicks(3910),
                            SeriesNumber = 1
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 3,
                            CreatedAt = new DateTime(2021, 9, 1, 11, 5, 24, 207, DateTimeKind.Local).AddTicks(3979),
                            DoctorId = 3,
                            EpisodeDate = new DateTime(2018, 7, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EpisodeNumber = 1,
                            EpisodeTitle = "TITLE 3",
                            EpisodeType = "TYPE 3",
                            ModifiedAt = new DateTime(2021, 9, 1, 11, 5, 24, 207, DateTimeKind.Local).AddTicks(3983),
                            SeriesNumber = 1
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 3,
                            CreatedAt = new DateTime(2021, 9, 1, 11, 5, 24, 207, DateTimeKind.Local).AddTicks(3988),
                            DoctorId = 4,
                            EpisodeDate = new DateTime(2018, 7, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EpisodeNumber = 1,
                            EpisodeTitle = "TITLE 4",
                            EpisodeType = "TYPE 3",
                            ModifiedAt = new DateTime(2021, 9, 1, 11, 5, 24, 207, DateTimeKind.Local).AddTicks(3990),
                            SeriesNumber = 1
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 4,
                            CreatedAt = new DateTime(2021, 9, 1, 11, 5, 24, 207, DateTimeKind.Local).AddTicks(3994),
                            DoctorId = 5,
                            EpisodeDate = new DateTime(2018, 7, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EpisodeNumber = 1,
                            EpisodeTitle = "TITLE 5",
                            EpisodeType = "TYPE 2",
                            ModifiedAt = new DateTime(2021, 9, 1, 11, 5, 24, 207, DateTimeKind.Local).AddTicks(3997),
                            SeriesNumber = 2
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 5,
                            CreatedAt = new DateTime(2021, 9, 1, 11, 5, 24, 207, DateTimeKind.Local).AddTicks(4001),
                            DoctorId = 6,
                            EpisodeDate = new DateTime(2018, 7, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EpisodeNumber = 1,
                            EpisodeTitle = "TITLE 6",
                            EpisodeType = "TYPE 1",
                            ModifiedAt = new DateTime(2021, 9, 1, 11, 5, 24, 207, DateTimeKind.Local).AddTicks(4003),
                            SeriesNumber = 2
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 6,
                            CreatedAt = new DateTime(2021, 9, 1, 11, 5, 24, 207, DateTimeKind.Local).AddTicks(4007),
                            DoctorId = 7,
                            EpisodeDate = new DateTime(2018, 7, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EpisodeNumber = 1,
                            EpisodeTitle = "TITLE 7",
                            EpisodeType = "TYPE 1",
                            ModifiedAt = new DateTime(2021, 9, 1, 11, 5, 24, 207, DateTimeKind.Local).AddTicks(4010),
                            SeriesNumber = 2
                        },
                        new
                        {
                            Id = 8,
                            AuthorId = 8,
                            CreatedAt = new DateTime(2021, 9, 1, 11, 5, 24, 207, DateTimeKind.Local).AddTicks(4013),
                            EpisodeDate = new DateTime(2018, 7, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EpisodeNumber = 1,
                            EpisodeTitle = "TITLE 8",
                            EpisodeType = "TYPE 3",
                            ModifiedAt = new DateTime(2021, 9, 1, 11, 5, 24, 207, DateTimeKind.Local).AddTicks(4016),
                            SeriesNumber = 2
                        });
                });

            modelBuilder.Entity("DoctorWho.Db.Models.EpisodeCompanion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanionId")
                        .HasColumnType("int");

                    b.Property<int>("EpisodeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanionId");

                    b.HasIndex("EpisodeId");

                    b.ToTable("EpisodeCompanions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanionId = 1,
                            EpisodeId = 1
                        },
                        new
                        {
                            Id = 2,
                            CompanionId = 2,
                            EpisodeId = 1
                        },
                        new
                        {
                            Id = 3,
                            CompanionId = 3,
                            EpisodeId = 1
                        },
                        new
                        {
                            Id = 4,
                            CompanionId = 4,
                            EpisodeId = 1
                        },
                        new
                        {
                            Id = 5,
                            CompanionId = 5,
                            EpisodeId = 1
                        },
                        new
                        {
                            Id = 6,
                            CompanionId = 1,
                            EpisodeId = 2
                        },
                        new
                        {
                            Id = 7,
                            CompanionId = 2,
                            EpisodeId = 2
                        },
                        new
                        {
                            Id = 8,
                            CompanionId = 3,
                            EpisodeId = 2
                        },
                        new
                        {
                            Id = 9,
                            CompanionId = 4,
                            EpisodeId = 3
                        },
                        new
                        {
                            Id = 10,
                            CompanionId = 3,
                            EpisodeId = 3
                        },
                        new
                        {
                            Id = 11,
                            CompanionId = 5,
                            EpisodeId = 4
                        },
                        new
                        {
                            Id = 12,
                            CompanionId = 2,
                            EpisodeId = 4
                        },
                        new
                        {
                            Id = 13,
                            CompanionId = 1,
                            EpisodeId = 5
                        },
                        new
                        {
                            Id = 14,
                            CompanionId = 1,
                            EpisodeId = 6
                        });
                });

            modelBuilder.Entity("DoctorWho.Db.Models.EpisodeEnemy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EnemyId")
                        .HasColumnType("int");

                    b.Property<int>("EpisodeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EnemyId");

                    b.HasIndex("EpisodeId");

                    b.ToTable("EpisodeEnemies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EnemyId = 1,
                            EpisodeId = 1
                        },
                        new
                        {
                            Id = 2,
                            EnemyId = 2,
                            EpisodeId = 1
                        },
                        new
                        {
                            Id = 3,
                            EnemyId = 3,
                            EpisodeId = 1
                        },
                        new
                        {
                            Id = 4,
                            EnemyId = 4,
                            EpisodeId = 1
                        },
                        new
                        {
                            Id = 5,
                            EnemyId = 1,
                            EpisodeId = 2
                        },
                        new
                        {
                            Id = 6,
                            EnemyId = 2,
                            EpisodeId = 2
                        },
                        new
                        {
                            Id = 7,
                            EnemyId = 7,
                            EpisodeId = 2
                        },
                        new
                        {
                            Id = 8,
                            EnemyId = 1,
                            EpisodeId = 3
                        },
                        new
                        {
                            Id = 9,
                            EnemyId = 1,
                            EpisodeId = 4
                        },
                        new
                        {
                            Id = 10,
                            EnemyId = 1,
                            EpisodeId = 5
                        },
                        new
                        {
                            Id = 11,
                            EnemyId = 2,
                            EpisodeId = 5
                        },
                        new
                        {
                            Id = 12,
                            EnemyId = 2,
                            EpisodeId = 6
                        },
                        new
                        {
                            Id = 13,
                            EnemyId = 3,
                            EpisodeId = 6
                        },
                        new
                        {
                            Id = 14,
                            EnemyId = 2,
                            EpisodeId = 7
                        },
                        new
                        {
                            Id = 15,
                            EnemyId = 3,
                            EpisodeId = 7
                        });
                });

            modelBuilder.Entity("DoctorWho.Db.Models.EpisodesView", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("AuthorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Companions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DoctorId")
                        .HasColumnType("int");

                    b.Property<string>("DoctorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Enemies")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EpisodeDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EpisodeNumber")
                        .HasColumnType("int");

                    b.Property<string>("EpisodeTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EpisodeType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SeriesNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("DoctorId");

                    b.ToView("viewEpisodes");
                });

            modelBuilder.Entity("DoctorWho.Db.Models.InformationRequest", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessLevel")
                        .HasColumnType("int");

                    b.Property<int>("ApprovalStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InformationRequests");
                });

            modelBuilder.Entity("DoctorWho.Db.Models.Episode", b =>
                {
                    b.HasOne("DoctorWho.Db.Models.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId");

                    b.HasOne("DoctorWho.Db.Models.Doctor", "Doctor")
                        .WithMany()
                        .HasForeignKey("DoctorId");

                    b.Navigation("Author");

                    b.Navigation("Doctor");
                });

            modelBuilder.Entity("DoctorWho.Db.Models.EpisodeCompanion", b =>
                {
                    b.HasOne("DoctorWho.Db.Models.Companion", "Companion")
                        .WithMany()
                        .HasForeignKey("CompanionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoctorWho.Db.Models.Episode", "Episode")
                        .WithMany()
                        .HasForeignKey("EpisodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Companion");

                    b.Navigation("Episode");
                });

            modelBuilder.Entity("DoctorWho.Db.Models.EpisodeEnemy", b =>
                {
                    b.HasOne("DoctorWho.Db.Models.Enemy", "Enemy")
                        .WithMany()
                        .HasForeignKey("EnemyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoctorWho.Db.Models.Episode", "Episode")
                        .WithMany()
                        .HasForeignKey("EpisodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enemy");

                    b.Navigation("Episode");
                });

            modelBuilder.Entity("DoctorWho.Db.Models.EpisodesView", b =>
                {
                    b.HasOne("DoctorWho.Db.Models.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId");

                    b.HasOne("DoctorWho.Db.Models.Doctor", "Doctor")
                        .WithMany()
                        .HasForeignKey("DoctorId");

                    b.Navigation("Author");

                    b.Navigation("Doctor");
                });
#pragma warning restore 612, 618
        }
    }
}
